{"version":3,"file":"static/js/55.62f48d58.chunk.js","mappings":"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","sources":["webpack://messenger2000/./src/components/Chats/ChatsMobile/ChatsMobile.module.scss?2071","components/Chats/ChatsMobile/ChatsMobile.jsx","webpack://messenger2000/./src/components/Chats/Dialogs/DialogItem/DialogItem.module.scss?9efb","components/Chats/Dialogs/DialogItem/DialogItem.jsx","components/Chats/Dialogs/Dialogs.jsx","webpack://messenger2000/./src/components/Chats/InputNewChat/InputNewChat.module.scss?17ef","components/Chats/InputNewChat/InputNewChat.jsx","components/Chats/InputNewChat/DialogsNewChat.jsx","redux/reducers/chatsReducer/selectorChats.js","webpack://messenger2000/./src/components/Authorization/Authorization.module.scss?31fa"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerDialogs\":\"ChatsMobile_containerDialogs__txtEs\",\"dialogs\":\"ChatsMobile_dialogs__cBgs+\"};","import Dialogs from \"../Dialogs/Dialogs\";\r\nimport DialogsNewChat from \"../InputNewChat/DialogsNewChat\";\r\nimport style from './ChatsMobile.module.scss'\r\n\r\n\r\nexport default function ChatsMobile() {\r\n\r\n    return (\r\n        <div className={style.containerDialogs}>\r\n            <div className={style.dialogs}>\r\n                <Dialogs />\r\n            </div>\r\n            <div className={style.dialogsController}>\r\n                <DialogsNewChat />\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"unActiveDialog\":\"DialogItem_unActiveDialog__oBZlL\",\"activeDialog\":\"DialogItem_activeDialog__tI3tu\",\"avatar\":\"DialogItem_avatar__40lT0\",\"removeButton\":\"DialogItem_removeButton__qqGym\",\"boxList\":\"DialogItem_boxList__HhSwm\",\"list\":\"DialogItem_list__Y8tBN\"};","import { ListItem } from \"@mui/material\";\r\nimport React from \"react\";\r\n// import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from './DialogItem.module.scss'\r\n// import DialogItemButtonRemove from \"./DialogItemButtonRemove/DialogItemButtonRemove\";\r\n\r\n/*\r\n\r\nAdded remove dialog\r\n*/\r\n\r\nexport default function DialogItem( { id, name, avatar } ) {\r\n    // let [visibleButton, setVisibleButton] = useState( false );\r\n    return ( <li className={styles.item}>\r\n\r\n        {/* // onMouseEnter={() => setVisibleButton( true )} */}\r\n        {/* // onMouseLeave={() => setVisibleButton( false )} */}\r\n        <NavLink className={( { isActive } ) => isActive ? styles.activeDialog : styles.unActiveDialog} to={`${id}`}>\r\n            {avatar && <div><img className={styles.avatar} src={avatar} width='24' heigth='24' alt={'profile avatar'} /></div>}\r\n            {name}\r\n        </NavLink>\r\n        {/* {visibleButton && <DialogItemButtonRemove id={id} />} */}\r\n    </li> )\r\n}\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closedSubscribeOnNewChats, setSubscribeOnNewChats } from \"../../../redux/actions\";\r\nimport { getChatsList } from \"../../../redux/reducers/chatsReducer/selectorChats\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport style from './DialogItem/DialogItem.module.scss'\r\n\r\nexport default function Dialogs() {\r\n    const dispatch = useDispatch();\r\n    const statusSubscribeOnNewChats = useSelector( state => state.chats.subscribeActived, ( prev, next ) => prev !== next )\r\n    useEffect( () => {\r\n        dispatch( setSubscribeOnNewChats() );\r\n        return () => {\r\n            dispatch( closedSubscribeOnNewChats() );\r\n        }\r\n    }, [statusSubscribeOnNewChats, dispatch] )\r\n\r\n    const getDialogs = useCallback( () => getChatsList(), [] );\r\n    const dialogs = useSelector( getDialogs() );\r\n\r\n\r\n    let list = dialogs.map( ( el ) => <DialogItemMemo avatar={el.avatar} key={el.chatId} id={el.linkToDialog} name={el.nameDialog} /> )\r\n    return ( <div className={style.boxList}>\r\n        <ul className={style.list}>{list}</ul>\r\n    </div> )\r\n}\r\n\r\nconst DialogItemMemo = React.memo( DialogItem );","// extracted by mini-css-extract-plugin\nexport default {\"newChatButton\":\"InputNewChat_newChatButton__KzopM\",\"error\":\"InputNewChat_error__KlGtR\",\"boxAddedChat\":\"InputNewChat_boxAddedChat__mjI3y\"};","import { addNewChat, changeNameNewChat, toggleNewChatInput } from \"../../../redux/actions\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport style from './InputNewChat.module.scss'\r\nimport { getErrorMessageChats, getStatusErrorChats } from \"../../../redux/reducers/chatsReducer/selectorChats\";\r\n\r\nexport default function InputNewChat() {\r\n    const dispatch = useDispatch();\r\n\r\n    const newNameChat = useSelector( state => state.chats.nameNewChat );\r\n    const isError = useSelector( getStatusErrorChats(), shallowEqual );\r\n    const errorMessage = useSelector( getErrorMessageChats(), shallowEqual );\r\n    const onChangeInputNewChat = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( changeNameNewChat( e.target.value ) );\r\n    }\r\n\r\n    const addNewChatHandler = ( e ) => {\r\n        e.preventDefault();\r\n        if ( newNameChat ) {\r\n            dispatch( addNewChat() );\r\n        } else {\r\n            dispatch( toggleNewChatInput() )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.boxAddedChat}>\r\n            <TextField error={isError} type='email' required onChange={onChangeInputNewChat} value={newNameChat} label=\"email user\" variant=\"outlined\" />\r\n            <div className={style.newChatButton}>\r\n                {isError && <div className={style.error}>{errorMessage}</div>}\r\n                <Button type=\"submit\" onClick={addNewChatHandler} variant=\"contained\">add</Button></div>\r\n        </div> )\r\n}","import { Button } from \"@mui/material\";\r\nimport { useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleNewChatInput } from \"../../../redux/actions\";\r\nimport { getStatusFieldInput } from \"../../../redux/reducers/chatsReducer/selectorChats\";\r\nimport InputNewChat from \"./InputNewChat\";\r\nimport style from '../../Authorization/Authorization.module.scss'\r\n\r\n\r\nexport default function DialogsNewChat() {\r\n    const dispatch = useDispatch();\r\n    const getStatusInput = useMemo( () => getStatusFieldInput(), [] );\r\n    const inputNewDialog = useSelector( getStatusInput );\r\n\r\n    const setInputVisible = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( toggleNewChatInput() )\r\n    }\r\n    return ( <>\r\n        {!inputNewDialog ? <div className={style.buttonAddChat}><Button onClick={setInputVisible} variant=\"contained\">Add user</Button> </div> :\r\n            <InputNewChat />\r\n        }\r\n        <div className={style.nativeAd}>\r\n            <p>native advertising</p>\r\n            <p>pojalusta voz'mite na rabotu!11!11!</p>\r\n            <p className={style.nativeAdDescription}>created for fun and experience @toron2cÂ©</p>\r\n        </div>\r\n    </> )\r\n}","export function getChatsList() {\r\n    return ( state ) => state.chats.chatList;\r\n}\r\n\r\nexport function checkCorrectId( id ) {\r\n    return ( state ) => state.chats.chatList.find( el => el.linkToDialog === Number( id ) );\r\n}\r\nexport function getStatusFieldInput() {\r\n    return ( state ) => state.chats.toggleNewChat;\r\n}\r\n\r\nexport function getStatusErrorChats() {\r\n    return ( state ) => state.chats.error.isError;\r\n}\r\nexport function getErrorMessageChats() {\r\n    return ( state ) => state.chats.error.msg;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Authorization_box__d3oXS\",\"boxInputs\":\"Authorization_boxInputs__+R9dV\",\"boxCreateAccount\":\"Authorization_boxCreateAccount__ekyjg\",\"link\":\"Authorization_link__rYBKq\",\"nativeAd\":\"Authorization_nativeAd__fbIrz\",\"buttonAddChat\":\"Authorization_buttonAddChat__3xG51\",\"nativeAdDescription\":\"Authorization_nativeAdDescription__qpLsv\"};"],"names":["ChatsMobile","className","style","Dialogs","DialogsNewChat","DialogItem","id","name","avatar","styles","isActive","to","src","width","heigth","alt","dispatch","useDispatch","statusSubscribeOnNewChats","useSelector","state","chats","subscribeActived","prev","next","useEffect","setSubscribeOnNewChats","closedSubscribeOnNewChats","getDialogs","useCallback","getChatsList","list","map","el","DialogItemMemo","linkToDialog","nameDialog","chatId","React","InputNewChat","newNameChat","nameNewChat","isError","getStatusErrorChats","shallowEqual","errorMessage","getErrorMessageChats","TextField","error","type","required","onChange","e","preventDefault","changeNameNewChat","target","value","label","variant","Button","onClick","addNewChat","toggleNewChatInput","getStatusInput","useMemo","getStatusFieldInput","inputNewDialog","chatList","checkCorrectId","find","Number","toggleNewChat","msg"],"sourceRoot":""}
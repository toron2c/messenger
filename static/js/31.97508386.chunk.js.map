{"version":3,"file":"static/js/31.97508386.chunk.js","mappings":"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","sources":["webpack://messenger2000/./src/components/CharactersPage/CharactersItem/CharactersItem.module.scss?c540","components/CharactersPage/CharactersItem/CharactersItem.jsx","webpack://messenger2000/./src/components/CharactersPage/Characters.module.scss?eb27","components/CharactersPage/CharactersController/CharactersController.jsx","redux/reducers/catsReducer/selectorCharacters.js","components/CharactersPage/CharactersErrorLoad/CharactersErrorLoad.jsx","components/CharactersPage/Characters.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CharactersItem_item__S1yAA\",\"ava\":\"CharactersItem_ava__zMEVA\",\"name\":\"CharactersItem_name__2stQu\",\"buttonSetAvatar\":\"CharactersItem_buttonSetAvatar__TvmSb\"};","import style from './CharactersItem.module.scss'\r\n\r\nexport const CharactersItem = ( { image, name, setAvatar, auth } ) => {\r\n\r\n\r\n\r\n    return ( <div className={style.item}>\r\n        <div>\r\n            <img className={style.ava} src={image} alt={\"ava\"} />\r\n        </div>\r\n        <div className={style.name}>\r\n            {name}\r\n            <div >\r\n                {auth ? <button onClick={( e ) => {\r\n                    e.preventDefault();\r\n                    setAvatar( image )\r\n                }} className={style.buttonSetAvatar}>Set avatar</button> : ''}\r\n            </div>\r\n        </div>\r\n\r\n    </div > )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"boxCharacters\":\"Characters_boxCharacters__UKdZ8\",\"boxCharactersList\":\"Characters_boxCharactersList__XuyH+\",\"controllers\":\"Characters_controllers__ZJR8l\",\"button\":\"Characters_button__Y9hJj\",\"error\":\"Characters_error__hIdGU\",\"reloadBox\":\"Characters_reloadBox__r8128\",\"reload\":\"Characters_reload__1IWMq\"};","import { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { getListCharacters } from \"../../../redux/actions\";\r\nimport { getInfo } from \"../../../redux/reducers/catsReducer/selectorCharacters\";\r\nimport style from './../Characters.module.scss'\r\n\r\n\r\nexport const CharactersController = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { prev, next } = useSelector( getInfo(), shallowEqual );\r\n    const onClickNextPage = ( e, page ) => {\r\n        e.preventDefault();\r\n        dispatch( getListCharacters( page ) );\r\n    }\r\n    return (\r\n        <div className={style.controllers}>\r\n            <div><button className={style.button} variant=\"contained\" disabled={prev ? false : true} onClick={( e ) => { onClickNextPage( e, prev ) }}>left</button></div>\r\n            <div><button className={style.button} variant=\"contained\" disabled={next ? false : true} onClick={( e ) => { onClickNextPage( e, next ) }}>right</button></div>\r\n        </div> )\r\n}","\r\nexport function getList() {\r\n    return ( state ) => state.characters.list;\r\n}\r\n\r\nexport function getErrorMessage() {\r\n    return ( state ) => state.characters.err.errMessage;\r\n}\r\n\r\nexport function getErrorPage() {\r\n    return ( state ) => state.characters.err.errPage;\r\n}\r\n\r\nexport function getInfo() {\r\n    return ( state ) => state.characters.info;\r\n}","import { useDispatch, useSelector } from 'react-redux'\r\nimport { getListCharacters } from '../../../redux/actions';\r\nimport style from './../Characters.module.scss'\r\n\r\n\r\nexport const CharactersErrorLoad = ( { error } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const page = useSelector( state => state.characters.err.errPage );\r\n\r\n    const reloadHandler = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( getListCharacters( page ) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.error}>\r\n            {error}\r\n            <div className={style.reloadBox}>\r\n                <button onClick={reloadHandler} className={style.reload}>\r\n                    Reload\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useCallback, useEffect, useMemo } from \"react\"\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\r\nimport { getListCharacters, setAvatarWithSaga } from \"../../redux/actions\";\r\nimport { CharactersItem } from \"./CharactersItem/CharactersItem\";\r\nimport style from './Characters.module.scss'\r\nimport { CharactersController } from \"./CharactersController/CharactersController\";\r\nimport { CharactersErrorLoad } from \"./CharactersErrorLoad/CharactersErrorLoad\";\r\nimport { getErrorMessage, getList } from \"../../redux/reducers/catsReducer/selectorCharacters\";\r\nimport { getStatusAuth } from \"../../redux/reducers/authReducer/selectorAuth\";\r\n\r\n\r\n\r\n\r\nexport default function Characters() {\r\n    const dispatch = useDispatch();\r\n    const getListMemo = useMemo( () => getList(), [] );\r\n    const List = useSelector( getListMemo, shallowEqual );\r\n    const getError = useCallback( () => getErrorMessage(), [] )\r\n    const error = useSelector( getError() );\r\n    const auth = useSelector( getStatusAuth(), ( prev, next ) => prev.value !== next.value );\r\n    useEffect( () => {\r\n        if ( List.length === 0 && !error ) {\r\n            dispatch( getListCharacters() )\r\n        }\r\n    }, [List, dispatch, error] )\r\n\r\n    const onSetAvatarHandler = ( src ) => {\r\n        dispatch( setAvatarWithSaga( src ) );\r\n    }\r\n\r\n    let list = List.map( el => <CharactersItem auth={auth} setAvatar={onSetAvatarHandler} image={el.image} name={el.name} key={el.id} /> )\r\n    return (\r\n        <>\r\n            {error ? <CharactersErrorLoad error={error} /> :\r\n                <div className={style.boxCharacters}>\r\n                    <CharactersController />\r\n                    <div className={style.boxCharactersList}>{list}</div>\r\n                </div>}\r\n        </>\r\n    )\r\n}"],"names":["CharactersItem","image","name","setAvatar","auth","className","style","src","alt","onClick","e","preventDefault","CharactersController","dispatch","useDispatch","useSelector","state","characters","info","shallowEqual","prev","next","onClickNextPage","page","getListCharacters","variant","disabled","CharactersErrorLoad","error","err","errPage","Characters","getListMemo","useMemo","list","List","getError","useCallback","errMessage","getStatusAuth","value","useEffect","length","onSetAvatarHandler","setAvatarWithSaga","map","el","id"],"sourceRoot":""}